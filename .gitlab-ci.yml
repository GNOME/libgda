# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: ubuntu:devel

services:
  - postgres:11
  - mysql:8
  - jacobalberty/firebird:3.0
  - mariadb:10

stages:
  - build
  - deploy_doc

variables:
  POSTGRES_DB: test
  POSTGRES_USER: test
  POSTGRES_PASSWORD: test1
  POSTGRES_HOST: postgres
  MYSQL_DATABASE: test
  MYSQL_ROOT_PASSWORD: test1
  MYSQL_USER: root
  MYSQL_HOST: mysql
  G_MESSAGES_DEBUG: all
  DEPENDENCIES: gcc gettext gtk-doc-tools make autoconf
                meson ninja-build
                libgtk-3-dev libxml2-dev gnome-common
                libsqlite3-dev
                gobject-introspection libssl-dev libmysqlclient-dev
                libldap2-dev libpq-dev
                libgtksourceview-3.0-dev
                libgdk-pixbuf2.0-dev
                libgraphviz-dev
                libisocodes-dev
                libsoup2.4-dev
                libxslt1-dev
                libjson-glib-dev
                libgcrypt20-dev
                libssl-dev
                libldap2-dev
                libgoocanvas-2.0-dev
                libhsqldb1.8.0-java
                yelp-tools
                iso-codes
                libgirepository1.0-dev
                libgee-0.8-dev
                valadoc
                libgladeui-dev
                postgresql-client
                postgresql-client-common
                libsqlcipher-dev

  GIT_SUBMODULE_STRATEGY: normal
  SQLITE_DBCREATE_PARAMS: "DB_DIR=."
  SQLITE_CNC_PARAMS: "DB_DIR=."
  POSTGRESQL_DBCREATE_PARAMS: "HOST=$POSTGRES_HOST;ADM_LOGIN=$POSTGRES_USER;ADM_PASSWORD=$POSTGRES_PASSWORD"
  POSTGRESQL_CNC_PARAMS: "HOST=$POSTGRES_HOST;USERNAME=$POSTGRES_USER;PASSWORD=$POSTGRES_PASSWORD;DB_NAME=$POSTGRES_DB"
  POSTGRESQL_META_CNC: "DB_NAME=$POSTGRES_DB;HOST=$POSTGRES_HOST;USERNAME=$POSTGRES_USER;PASSWORD=$POSTGRES_PASSWORD"
  MYSQL_CNC_PARAMS: "DB_NAME=$MYSQL_DATABASE;HOST=$MYSQL_HOST;USERNAME=$MYSQL_USER;PASSWORD=$MYSQL_ROOT_PASSWORD"
  MYSQL_META_CNC: "DB_NAME=$MYSQL_DATABASE;HOST=$MYSQL_HOST;USERNAME=$MYSQL_USER;PASSWORD=$MYSQL_ROOT_PASSWORD"
  SQLITE_SO_DDL: "DB_DIR=.;DB_NAME=ci_test_db.db"

before_script:
  - export DEBIAN_FRONTEND=noninteractive
  - apt update && apt -y upgrade && apt -y install $DEPENDENCIES

library_build:
  stage: build
  script:
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
  - meson --prefix=/usr --buildtype=debug -Dgtk_doc=true --werror _build
  - cd _build
  - ninja
  - broadwayd &
  - GDK_BACKEND=broadway meson test
  - ninja install
  artifacts:
    when: on_failure
    paths:
    - _build/meson-logs/testlog.txt
    - _build/meson-logs/meson-log.txt
    - _build/doc/C/libgda/html
    - _build/doc/C/libgdaui/html
    - _build/doc/Gda-6.0
    - _build/doc/Gdaui-6.0
    expire_in: 1 week

paralel_build:
  stage: build
  script:
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
  - meson --prefix=/usr --buildtype=debug -Dgtk_doc=true --werror _build
  - cd _build
  - ninja
  - broadwayd &
  - GDK_BACKEND=broadway meson test
  - ninja install
  artifacts:
    when: on_failure
    paths:
    - _build/meson-logs/testlog.txt
    - _build/meson-logs/meson-log.txt
    - _build/doc/C/libgda/html
    - _build/doc/C/libgdaui/html
    - _build/doc/Gda-6.0
    - _build/doc/Gdaui-6.0
    expire_in: 1 week

pages:
  stage: deploy_doc
  script:
  - meson _build --prefix=/usr -Dgtk_doc=true -Dexperimental=true -Denable-tools=true -Denable-ldap=true
  - cd _build
  - ninja
  - ninja install
  - mkdir ../public
  - mv doc/index.html ../public/
  - mkdir ../public/C
  - mkdir ../public/C/libgda
  - mv doc/C/libgda/html/* ../public/C/libgda/
  - mkdir ../public/C/libgdaui
  - mv doc/C/libgdaui/html/* ../public/C/libgdaui/
  - mkdir ../public/vala
  - mv doc/Gda-6.0 ../public/vala
  - cp libgda/libgda-6.0.vapi ../public/vala
  - mv doc/Gdaui-6.0 ../public/vala
  - cp libgda-ui/libgdaui-6.0.vapi ../public/vala
  allow_failure: true
  artifacts:
    paths:
    - public
