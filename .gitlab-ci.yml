# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: ubuntu:devel

stages:
     - build

variables:
  DEPENDENCIES: gcc gettext gtk-doc-tools make autoconf
                meson ninja-build
                libgtk-3-dev libxml2-dev gnome-common
                libsqlite3-dev
                gobject-introspection libssl-dev libmysqlclient-dev
                default-libmysqld-dev libldap2-dev libpq-dev
                libgtksourceview-3.0-dev
                libgdk-pixbuf2.0-dev
                libgraphviz-dev
                libisocodes-dev
                libxslt1-dev
                libjson-glib-dev
                libgcrypt20-dev
                libldap2-dev
                libgoocanvas-2.0-dev
                libhsqldb1.8.0-java
                yelp-tools
                iso-codes
                libgirepository1.0-dev
                libgee-0.8-dev
                valadoc

  GIT_SUBMODULE_STRATEGY: normal

before_script:
  - apt update && apt -y install $DEPENDENCIES

autotools_build:
  stage: build
  script:
  - ./autogen.sh
  - make distclean
  - mkdir _build
  - cd _build
  - ../configure
  - make
  - broadwayd &
  - GDK_BACKEND=broadway make check
  artifacts:
    when: on_failure
    paths:
    - tests/test-suite.log
    - libgda/test-suite.log
    - tests/data-models/test-suite.log
    - tests/meta-store/test-suite.log
    - tests/value-holders/test-suite.log
    - tests/parser/test-suite.log
    - tests/providers/test-suite.log
    expire_in: 1 week

meson_build:
  stage: build
  script:
  - meson _build --prefix=/usr
  - cd _build
  - ninja
  - broadwayd &
  - GDK_BACKEND=broadway meson test
  - ninja install
  - cd ..
  artifacts:
    when: on_failure
    paths:
    - _build/meson-logs/meson-log.txt
    - _build/doc/C
    - _build/doc/valadoc/libgda-6.0
    expire_in: 1 week
pages:
  stage: build
  script:
  - meson _build
  - cd _build
  - ninja
  - ninja install
  - mkdir ../public
  - mv doc/index.html ../public/
  - mkdir ../public/C
  - mv doc/C/* ../public/C/
  - mkdir ../public/vala
  - mv doc/vala/libgda-6.0 ../public/vala
  - mv doc/valaui/libgdaui-6.0 ../public/vala
  - cp libgda/libgda-6.0.vapi ../public/vala
  - cp libgda/libgdaui-6.0.vapi ../public/vala
  artifacts:
    paths:
    - public