# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: ubuntu:devel

services:
  - postgres

stages:
  - build

variables:
  POSTGRES_USER: test
  POSTGRES_PASSWORD: test1
  DEPENDENCIES: gcc gettext gtk-doc-tools make autoconf
                meson ninja-build
                libgtk-3-dev libxml2-dev gnome-common
                libsqlite3-dev
                gobject-introspection libssl-dev libmysqlclient-dev
                default-libmysqld-dev libldap2-dev libpq-dev
                libgtksourceview-3.0-dev
                libgdk-pixbuf2.0-dev
                libgraphviz-dev
                libisocodes-dev
                libxslt1-dev
                libjson-glib-dev
                libgcrypt20-dev
                libssl-dev
                libldap2-dev
                libgoocanvas-2.0-dev
                libhsqldb1.8.0-java
                yelp-tools
                iso-codes
                libgirepository1.0-dev
                libgee-0.8-dev
                valadoc
                libgladeui-dev
                postgresql-client
                postgresql-client-common

  GIT_SUBMODULE_STRATEGY: normal
  GDA_PSQ_HOST: postgres
  GDA_PSQ_PASSWORD: "postgres"
  GDA_PSQ_USER: postgres 
  SQLITE_DBCREATE_PARAMS: "DB_DIR=."
  SQLITE_CNC_PARAMS: "DB_DIR=."
  POSTGRESQL_DBCREATE_PARAMS: "HOST=$GDA_PSQ_HOST;PORT=5432;ADM_LOGIN=$GDA_PSQ_USER;ADM_PASSWORD='$GDA_PSQ_PASSWORD'"
  POSTGRESQL_CNC_PARAMS: "HOST=$GDA_PSQ_HOST;PORT=5432;USERNAME=$GDA_PSQ_USER;PASSWORD='$GDA_PSQ_PASSWORD'"
  POSTGRESQL_META_CNC: "DB_NAME=postgres;HOST=postgres;USERNAME=postgres"
  
before_script:
  - apt update && apt -y install $DEPENDENCIES

autotools_build:
  stage: build
  script:
  - ./autogen.sh
  - make distclean
  - mkdir _build
  - cd _build
  - ../configure
  - make
  - broadwayd &
  - GDK_BACKEND=broadway make check
  - cd ..
  artifacts:
    when: on_failure
    paths:
    - _build/tests/test-suite.log
    - _build/libgda/test-suite.log
    - _build/tests/data-models/test-suite.log
    - _build/tests/meta-store/test-suite.log
    - _build/tests/meta-store/check_meta_store_postgresql.log
    - _build/tests/value-holders/test-suite.log
    - _build/tests/parser/test-suite.log
    - _build/tests/providers/test-suite.log
    expire_in: 1 week

meson_build:
  stage: build
  script:
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
  - meson _build --prefix=/usr -Denable-ci-environment=true -Denable-debug=true
  - cd _build
  - ninja
  - broadwayd &
  - GDK_BACKEND=broadway meson test
  - ninja install
  - cd ..
  artifacts:
    when: on_failure
    paths:
    - _build/meson-logs/testlog.txt
    - _build/meson-logs/meson-log.txt
    - _build/doc/C/libgda/html
    - _build/doc/C/libgdaui/html
    - _build/doc/Gda-6.0
    - _build/doc/Gdaui-6.0
    expire_in: 1 week
pages:
  stage: build
  script:
  - meson _build
  - cd _build
  - ninja
  - ninja install
  - mkdir ../public
  - mv doc/index.html ../public/
  - mkdir ../public/C
  - mv doc/C/* ../public/C/
  - mkdir ../public/vala
  - mv doc/Gda-6.0 ../public/vala
  - mv doc/Gdaui-6.0 ../public/vala
  - cp libgda/libgda-6.0.vapi ../public/vala
  - cp libgda-ui/libgdaui-6.0.vapi ../public/vala
  # Fix meson gtk-doc generation to remove next
  - cd ..
  - ./autogen.sh --enable-gtk-doc
  - make
  - mv doc/C/libgda/html public/C/libgda-6.0
  - mv doc/C/libgdaui/html public/C/libgdaui-6.0
  artifacts:
    paths:
    - public
